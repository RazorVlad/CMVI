menu.file=Файл
menu.open=Открыть
menu.save=Сохранить
menu.close=Закрыть
menu.methods=Методы
menu.report=Отчет
menu.saveReport=Сохранить отчёт
menu.showReport=Просмотр отчёта
menu.about=О программе
menu.help=Помощь
menu.language=Язык
menu.language.russian=Русский
menu.language.english=English
title=Численные методы
chooser.readData=Чтение данных из файла
graphics.functionGraph=График функции
labels.chooseMethodGroup=Выберите категорию методов
labels.chooseMethod=Выберите метод
labels.H=Количество разбиений E =
labels.epsilon=Погрешность 
labels.solution=Решение
labels.cellWidth=Ширина ячеек
labels.input=Введите
labels.size=размерность
labels.numsCount=Количество знаков
labels.afterComa=после запятой
labels.matrix=матрицы
labels.inputX=Введите x
labels.dots=Точки:
labels.shortType=Упрощенный вид:
labels.longType=Не упрощенный вид:
labels.eigenvalues=Собственные значения
labels.eigenVectors=Собственные векторы
labels.characteristicMatrixEquation =Характеристическое уравнение матрицы:
labels.rootIntervals=Корни находятся в следующих интервалах:
labels.inputData=Введите данные:
labels.inputMatrixSize=Введите размерность матрицы
labels.inputNumsCountAfterComa=Количество знаков после запятой
errors.incorrectSymbol=Введены некорректные символы!
errors.error=Ошибка
buttons.save=Сохранить
buttons.valueYx=Значение y(x)
buttons.accept=Применить
buttons.solve=Решить
buttons.graph=Посмотреть график
buttons.buildGraph=Построить
methods.SLAU.Gauss=Решение СЛАУ методом Гаусса
methods.SLAU.Yacoby=Решение СЛАУ методом Якоби(простой итерации)
methods.SLAU.Gauss-Seidel=Решение СЛАУ методом Гаусса-Зейделя
methods.det.Gauss=Нахождение определителя матрицы методом Гаусса
methods.reverse.Gauss=Нахождение обратной матрицы методом Гаусса
methods.iterations=Метод простой итерации(нелинейные уравнения)
methods.Newton=Метод Ньютона
methods.Krylov=Метод Крылова
methods.interpolation.Lagrange=Интерполяция Лагранжа
methods.trapezium=Метод трапеций
methods.Simpson=Формула Симпсона (Метод парабол)
methods.progonka=Метод прогонки
methodsGroup.linearAlgebra=\u041C\u0435\u0442\u043E\u0434\u044B \u043B\u0438\u043D\u0435\u0439\u043D\u043E\u0439 \u0430\u043B\u0433\u0435\u0431\u0440\u044B
methodsGroup.NonlinearEquations=\u041C\u0435\u0442\u043E\u0434\u044B \u0440\u0435\u0448\u0435\u043D\u0438\u044F \u043D\u0435\u043B\u0438\u043D\u0435\u0439\u043D\u044B\u0445 \u0443\u0440\u0430\u0432\u043D\u0435\u043D\u0438\u0439
methodsGroup.matrixEigenvaluesAndEigenvectors=\u041D\u0430\u0445\u043E\u0436\u0434\u0435\u043D\u0438\u0435 \u0441\u043E\u0431\u0441\u0442\u0432\u0435\u043D\u043D\u044B\u0445 \u0437\u043D\u0430\u0447\u0435\u043D\u0438\u0439 \u0438 \u0441\u043E\u0431\u0441\u0442\u0432\u0435\u043D\u043D\u044B\u0445 \u0432\u0435\u043A\u0442\u043E\u0440\u0430 \u043C\u0430\u0442\u0440\u0438\u0446\u044B
methodsGroup.interpolation=\u0418\u043D\u0442\u0435\u0440\u043F\u043E\u043B\u0438\u0440\u043E\u0432\u0430\u043D\u0438\u0435 \u0444\u0443\u043D\u043A\u0446\u0438\u0439
methodsGroup.NumericalIntegration=\u0427\u0438\u0441\u043B\u0435\u043D\u043D\u043E\u0435 \u0438\u043D\u0442\u0435\u0433\u0440\u0438\u0440\u043E\u0432\u0430\u043D\u0438\u0435
methodsGroup.DifferentialEquations=\u041A\u0440\u0430\u0435\u0432\u044B\u0435 \u0437\u0430\u0434\u0430\u0447\u0438 \u0434\u043B\u044F \u043E\u0431\u044B\u043A\u043D\u043E\u0432\u0435\u043D\u043D\u044B\u0445 \u0434\u0438\u0444\u0444\u0435\u0440\u0435\u043D\u0446\u0438\u0430\u043B\u044C\u043D\u044B\u0445 \u0443\u0440\u0430\u0432\u043D\u0435\u043D\u0438\u0439
report.solveYacoby=Решение СЛАУ методом Якоби
report.solveProgonka=Решение методом Прогонки
report.solveNewton=Pешение нелинейного уравнения с помощью метода Ньютона
report.solveKrilov=Нахождение собственных значений и собственного вектора матрицы с помощью метода Крылова
report.haveMatrixAandB=Даны матрицы A и В
report.modifyMatrixToReqForm=Приводим матрицу к необходимому виду
report.calculateMatrixElements=Вычисляем элементы матрицы
report.calculateMatrixNorm=Находим норму матрицы
report.calculateStart=Находим начальное приближение
report.calculateRoots=Уточняем корни
report.iteration=Итерация
report.solutionMatrix=Матрица решений
report.integralSearchTrapezium=Нахождение интеграла методом трапеций
report.integralSearchParabol=Нахождение интеграла методом парабол
report.definedInterval=Задан интервал интегрирования
report.andIntegralFunction=и подинтегральная функция
report.splitIntervalBy=Разобьем интервал интегрирования на
report.equalParts=равных частей с шагом h
report.trapeziumAreaEqualsIntegral=Площадь криволинейной трапеции равна интегралу от Xi до Xi+1 функции f(x)
report.aproximizeFunction=Апроксимируем функцию f(x) полиномом 1-й степени,
report.thenThisAreaCanEqualToTriangle=тогда эту площадь можно приравнять к площади прямоугольной трапеции.
report.trapeziumAreaEqualSumTriangleArea=Площадь трапеции будет состоять из суммы площадей треугольников
report.andRecktangleArea=И суммы площадей прямоугольников
report.integralValue=Значение интеграла
report.onEachPart=На каждом частичном отрезке [Xi;Xi+1] длины h
report.replaceFx=заменим функцию f(x) квадратичной параболой
report.thatIntegratedFx=интерполирующей  функцию f(x) в узлах
report.calculatingThisFigureArea=Вычисляя площадь этой фигуры получим искомое значение интеграла
report.initialData=Исходные данные
report.interval=Интервал
report.findStepH=Находим шаг h
report.splitInterval=Делим интервал
report.onNumberOfParts=на количество разбиений
report.calculateCoefs=Вычисляем коэфициенты
report.calculate=Вычисляем
report.coefficient=Коэффициент
report.changeFrom=изменяется от
report.till=до
report.byFormula=по формуле
report.calculateLast=Вычисляем оставшиеся
report.solution=Решение
report.searchRootInTheInterval=Ищем корень на интервале
report.accurRoot=Уточненный корень
report.chooseStartRoot=Выберем приближенное значение корня
report.searchRootIntervals=Находим интервалы в которых находятся корни
report.definedExpression=Задано уравнение
report.definedRootIntervals=Заданы интервалы,в которых требуется искать корни





